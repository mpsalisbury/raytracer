floor ← sphere()
floor.transform ← scaling(10, 0.01, 10)
floor.material ← material()
floor.material.color ← color(1, 0.9, 0.9)
floor.material.specular ← 0

left_wall ← sphere()
left_wall.transform ← translation(0, 0, 5) *
                       rotation_y(-π/4) * rotation_x(π/2) *
                       scaling(10, 0.01, 10)
left_wall.material ← floor.material

right_wall ← sphere()
right_wall.transform ← translation(0, 0, 5) *
                        rotation_y(π/4) * rotation_x(π/2) *
                        scaling(10, 0.01, 10)
right_wall.material ← floor.material

middle ← sphere()
middle.transform ← translation(-0.5, 1, 0.5)
middle.material ← material()
middle.material.color ← color(0.1, 1, 0.5)
middle.material.diffuse ← 0.7
middle.material.specular ← 0.3

right ← sphere()
right.transform ← translation(1.5, 0.5, -0.5) * scaling(0.5, 0.5, 0.5)
right.material ← material()
right.material.color ← color(0.5, 1, 0.1)
right.material.diffuse ← 0.7
right.material.specular ← 0.3

left ← sphere()
left.transform ← translation(-1.5, 0.33, -0.75) * scaling(0.33, 0.33, 0.33)
left.material ← material()
left.material.color ← color(1, 0.8, 0.1)
left.material.diffuse ← 0.7
left.material.specular ← 0.3

world.light_source ← point_light(point(-10, 10, -10), color(1, 1, 1))

camera ← camera(100, 50, π/3)
camera.transform ← view_transform(point(0, 1.5, -5),
                                   point(0, 1, 0),
                                   vector(0, 1, 0))

# render the result to a canvas.
canvas ← render(camera, world)
